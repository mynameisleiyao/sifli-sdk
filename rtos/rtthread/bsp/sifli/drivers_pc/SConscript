import sys
import rtconfig
from building import *
Import('SIFLI_SDK')

cwd = GetCurrentDir()
src = Glob('*.c')
LIBS = []
LIBPATH = []
CPPPATH = [cwd, SIFLI_SDK + '/drivers/include/']
CPPDEFINES=[]

try:
    CPPDEFINES += ['SIFLI_BUILD="'+rtconfig.sifli_build+'\"']
except:
    pass
    
try:
    CPPDEFINES += ['SIFLI_VERSION='+ str(rtconfig.sifli_version)]
except:
    pass


src += [SIFLI_SDK + '/drivers/hal/bf0_hal_hlp.c']

if GetDepend('RT_USING_DFS') == False or GetDepend('RT_USING_DFS_ELMFAT') == False:
    SrcRemove(src, 'sd_sim.c')
if GetDepend('RT_USING_DFS') == False or GetDepend('RT_USING_MTD_NAND') == False:
    SrcRemove(src, 'nanddrv_file.c')
if GetDepend('RT_USING_DFS') == False or GetDepend('RT_USING_MTD_NOR') == False:
    SrcRemove(src, 'sst25vfxx_mtd_sim.c')
if GetDepend('RT_USING_DFS') == False:
    SrcRemove(src, 'dfs_win32.c')
if GetDepend('RT_USING_DFS') == False or GetDepend('RT_USING_MODULE') == False:
    SrcRemove(src, ['module_win32.c'])
if GetDepend('RT_USING_TAPNETIF') == False:
    SrcRemove(src, ['tap_netif.c'])
if sys.platform[0:5]=="linux": #check whether under linux
    SrcRemove(src, ['module_win32.c', 'dfs_win32.c', 'tap_netif.c'])

if GetDepend(['RT_USING_BT']):
    src += ['../drivers/drv_bt.c']
    CPPPATH += [cwd+'/../drivers']

if GetDepend(['BT_USING_SIFLI_SIMU']):
    CPPDEFINES += ['BT_USING_SIFLI']
    
group = DefineGroup('Drivers', src, depend = [''],
                    CPPPATH = CPPPATH, CPPDEFINES = CPPDEFINES, LIBS=LIBS, LIBPATH=LIBPATH)
                    
if GetDepend(['LCD_SDL2']):
    group += SConscript(os.path.join('sdl_fb', 'SConscript'))
    
Return('group')
