#ifndef ALARM_MANAGER_SERVICE_H
#define ALARM_MANAGER_SERVICE_H
#include <rtthread.h>
#include "data_service.h"

enum
{
    ALARMMGR_MSG_START = MSG_SERVICE_CUSTOM_ID_BEGIN, //0x30

    /*****Request messages*****/
    ALARMMGR_MSG_GET_ALARM_LIST_NEXT_REQ,
    ALARMMGR_MSG_ADD_ALARM_REQ,
    ALARMMGR_MSG_EDIT_ALARM_REQ,
    ALARMMGR_MSG_DISABLE_ALARM_REQ,
    ALARMMGR_MSG_ENABLE_ALARM_REQ,
    ALARMMGR_MSG_GET_ALARM_REQ,
    ALARMMGR_MSG_DELETE_ALARM_REQ,


    /*****Response messages*****/
    ALARMMGR_MSG_GET_ALARM_LIST_NEXT_RSP = RSP_MSG_TYPE | ALARMMGR_MSG_GET_ALARM_LIST_NEXT_REQ,
    ALARMMGR_MSG_ADD_ALARM_RSP = RSP_MSG_TYPE | ALARMMGR_MSG_ADD_ALARM_REQ,
    ALARMMGR_MSG_EDIT_ALARM_RSP = RSP_MSG_TYPE | ALARMMGR_MSG_EDIT_ALARM_REQ,
    ALARMMGR_MSG_DISABLE_ALARM_RSP = RSP_MSG_TYPE | ALARMMGR_MSG_DISABLE_ALARM_REQ,
    ALARMMGR_MSG_ENABLE_ALARM_RSP = RSP_MSG_TYPE | ALARMMGR_MSG_ENABLE_ALARM_REQ,
    ALARMMGR_MSG_GET_ALARM_RSP = RSP_MSG_TYPE | ALARMMGR_MSG_GET_ALARM_REQ,
    ALARMMGR_MSG_DELETE_ALARM_RSP = RSP_MSG_TYPE | ALARMMGR_MSG_DELETE_ALARM_REQ,
};

#define ALARMMGR_INVALID_INDEX  0xFFFF


#define ALARM_REPEAT_ONE_SHOT   0x00
#define ALARM_REPEAT_MONDAY     0x01
#define ALARM_REPEAT_TUESDAY    0x02
#define ALARM_REPEAT_WEDNESDAY  0x04
#define ALARM_REPEAT_THURSDAY   0x08
#define ALARM_REPEAT_FRIDAY     0x10
#define ALARM_REPEAT_SATURDAY   0x20
#define ALARM_REPEAT_SUNDAY     0x40
#define ALARM_REPEAT_WEEKEND    (ALARM_REPEAT_SATURDAY|ALARM_REPEAT_SUNDAY)
#define ALARM_REPEAT_WORKDAY    (ALARM_REPEAT_MONDAY|ALARM_REPEAT_TUESDAY|ALARM_REPEAT_WEDNESDAY|ALARM_REPEAT_THURSDAY|ALARM_REPEAT_FRIDAY)
#define ALARM_REPEAT_EVERYDAY   (ALARM_REPEAT_WEEKEND|ALARM_REPEAT_WORKDAY)

typedef uint8_t alarm_repeat_t;


typedef enum
{
    ALARM_STATE_DISABLE = 0x0,
    ALARM_STATE_ENABLE = 0x1,
} alarm_state_t;

typedef enum
{
    ALARM_SNOOZE_DISABLE = 0x0,
    ALARM_SNOOZE_ENABLE = 0x1,
} alarm_snooze_t;



typedef struct
{
    alarm_state_t  state;
    uint8_t  hour;
    uint8_t  minute;
    alarm_snooze_t  snooze;         //minutes
    alarm_repeat_t  days;   //wakeup days
} alarm_contxt_t;

typedef struct
{
    int32_t idx;    //base on 0:  0,1,2,3...
    alarm_contxt_t ctx;
} alarm_msg_t;


#endif  /* ALARM_MANAGER_SERVICE_H */

