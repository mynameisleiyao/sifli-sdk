#ifndef POWER_MANAGER_SERVICE_H
#define POWER_MANAGER_SERVICE_H
#include <rtthread.h>
#include "data_service.h"

enum
{
    PWRMGR_MSG_START = MSG_SERVICE_CUSTOM_ID_BEGIN, //0x30

    /*****Request messages*****/
    /*
        lcd setting
    */
    PWRMGR_MSG_LCD_BRIGHTNESS_GET_REQ,
    PWRMGR_MSG_LCD_BRIGHTNESS_SET_REQ,
    PWRMGR_MSG_LCD_AUTO_OFF_TIME_GET_REQ,
    PWRMGR_MSG_LCD_AUTO_OFF_TIME_SET_REQ,
    PWRMGR_MSG_LCD_ROTATE_180_GET_REQ,
    PWRMGR_MSG_LCD_ROTATE_180_SET_REQ,


    /*****Response messages*****/
    PWRMGR_MSG_LCD_BRIGHTNESS_GET_RSP = RSP_MSG_TYPE | PWRMGR_MSG_LCD_BRIGHTNESS_GET_REQ,
    PWRMGR_MSG_LCD_BRIGHTNESS_SET_RSP = RSP_MSG_TYPE | PWRMGR_MSG_LCD_BRIGHTNESS_SET_REQ,
    PWRMGR_MSG_LCD_AUTO_OFF_TIME_GET_RSP = RSP_MSG_TYPE | PWRMGR_MSG_LCD_AUTO_OFF_TIME_GET_REQ,
    PWRMGR_MSG_LCD_AUTO_OFF_TIME_SET_RSP = RSP_MSG_TYPE | PWRMGR_MSG_LCD_AUTO_OFF_TIME_SET_REQ,
    PWRMGR_MSG_LCD_ROTATE_180_GET_RSP = RSP_MSG_TYPE | PWRMGR_MSG_LCD_ROTATE_180_GET_REQ,
    PWRMGR_MSG_LCD_ROTATE_180_SET_RSP = RSP_MSG_TYPE | PWRMGR_MSG_LCD_ROTATE_180_SET_REQ,
};

typedef struct
{
    uint32_t min;
    uint32_t cur;
    uint32_t max;
} range_msg_t;



#endif  /* POWER_MANAGER_SERVICE_H */

