import rtconfig
Import('RTT_ROOT')
from building import *

# get current directory
cwd = GetCurrentDir()

try:
    if rtconfig.CORE=='LCPU':
         AddDepend('BF0_LCPU')
    elif rtconfig.CORE=='HCPU':
         AddDepend('BF0_HCPU')
    elif rtconfig.CORE=='ACPU':
         AddDepend('BF0_ACPU')
         AddDepend('BF0_HCPU')
         
except:
    if GetDepend("BF0_HCPU"):
        rtconfig.CORE='HCPU'
    elif GetDepend("BF0_LCPU"):
        rtconfig.CORE='LCPU'
    elif GetDepend("BF0_ACPU"):
        rtconfig.CORE='ACPU'
    else:
        print('Warning: Rtconfig.core not defined')
     
src=['bf0_pin_const.c']
src += ['Templates/system_bf0_ap.c']
src += ['lcpu_config_type.c']
if GetDepend(['BF0_HCPU']):
    if GetDepend('LCPU_CONFIG_V2') :
        src += ['lcpu_patch_a2.c']
    else:
        src += ['lcpu_patch.c']
    src += ['bf0_lcpu_init.c']
    if not GetDepend(['CFG_BOOTLOADER']) and not GetDepend(['BF0_ACPU']):
        src += ['bt_rf_cw_config.c']
        src += ['bt_power_config.c']
    if not GetDepend(['USE_ATE_MODE']):
        src += ['bt_rf_fulcal.c']
if GetDepend(['FPGA']):
    src += ['ble_rf_fulcal_ad9364.c']
    src += ['spi_tst_drv.c']

ASFLAGS = ''
CCFLAGS = ''
CPPDEFINES=['SF32LB58X']

if GetDepend(['BF0_HCPU']):
    if  rtconfig.PLATFORM != 'gcc':
        ASFLAGS = ' --cpreproc'
        CCFLAGS = ' -march=armv8-m.main+cdecp1'
    if rtconfig.PLATFORM == 'gcc':
        if not GetDepend('BF0_ACPU'):
            src += ['Templates/gcc/startup_bf0_hcpu.S']
        else:
            src += ['Templates/gcc/startup_bf0_acpu.S']
    elif rtconfig.PLATFORM == 'armcc':
        if not GetDepend('BF0_ACPU'):
            src += ['Templates/arm/startup_bf0_hcpu.S']
        else:
            src += ['Templates/arm/startup_bf0_acpu.S']
    elif rtconfig.PLATFORM == 'iar':
        src += ['Templates/iar/startup_bf0_hcpu.S']
elif GetDepend(['BF0_LCPU']):
    if  rtconfig.PLATFORM != 'gcc':
        ASFLAGS = ' --cpreproc'
        CCFLAGS = ' -march=armv8-m.main+cdecp1'    
    if rtconfig.PLATFORM == 'gcc':
        if GetDepend(['ROM_ATTR']):
            src += ['Templates/gcc/startup_bf0_lcpu_rom.S']
        else:
            src += ['Templates/gcc/startup_bf0_lcpu.S']
    elif rtconfig.PLATFORM == 'armcc':
        if GetDepend(['ROM_ATTR']):
            src += ['Templates/arm/startup_bf0_lcpu_rom.S']
        else:
            src += ['Templates/arm/startup_bf0_lcpu.S']
    elif rtconfig.PLATFORM == 'iar':
        src += ['Templates/iar/startup_bf0_lcpu.S']
        src += ['Templates/iar/startup_bf0_lcpu_rom.S']

path = [cwd, cwd + '/../Include']
path = path + [cwd + '/../../../external/CMSIS/Include']

if GetDepend('CFG_BOOTROM'):
    CPPDEFINES+=['SIMP_FLASHTAB']

if len(src) > 0:
    group = DefineGroup('CMSIS_BF0', src, depend = ['SOC_SF32LB58X'], ASFLAGS = ASFLAGS, CPPPATH=path, CCFLAGS=CCFLAGS, CPPDEFINES=CPPDEFINES)
else :
    group =[]

Return('group')

