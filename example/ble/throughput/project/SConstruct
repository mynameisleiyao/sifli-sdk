import os
import rtconfig
import shutil

# Check SDK 
SIFLI_SDK = os.getenv('SIFLI_SDK')
if not SIFLI_SDK:
    print("Please run set_env.bat in root folder of SIFLI SDK to set environment.")
    exit()
from building import *

PrepareEnv()
################################## change rtconfig.xxx to customize build ########################################
# print (rtconfig.OUTPUT_DIR)
AddOption('--lcpu',
  dest='lcpu',
  nargs=1, type='string',
  action='store',
  metavar='DIR',
  help='lcpu image path')

AddOption('--simu',
  dest='simu',
  action='store_true',
  default=False,
  help='58 RAM simulate 52 ROM')
lcpu_path = GetOption('lcpu')
# Add bootloader project
AddBootLoader(SIFLI_SDK,rtconfig.CHIP)

# Add LCPU project
if lcpu_path is not None:
    shutil.copyfile(lcpu_path, "../src/lcpu_img.c")
else:
    AddLCPU(SIFLI_SDK,rtconfig.CHIP, "../src/lcpu_img.c")
    
# Set default compile options
SifliEnv()

TARGET = rtconfig.OUTPUT_DIR + rtconfig.TARGET_NAME + '.' + rtconfig.TARGET_EXT

env = Environment(tools = ['mingw'],
    AS = rtconfig.AS, ASFLAGS = rtconfig.AFLAGS,
    CC = rtconfig.CC, CCFLAGS = rtconfig.CFLAGS,
    AR = rtconfig.AR, ARFLAGS = '-rc',
    LINK = rtconfig.LINK, LINKFLAGS = rtconfig.LFLAGS)
env.PrependENVPath('PATH', rtconfig.EXEC_PATH)
   
# prepare building environment
objs = PrepareBuilding(env)

# make a building
DoBuilding(TARGET, objs)

# Add flash table
AddFTAB(SIFLI_SDK,rtconfig.CHIP)

GenDownloadScript(env)
